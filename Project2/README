Author: Adam Sunderman
NetID: asu1351

class structure

executable: made from life.cc (uses ifdef statements to output either a life.exe or lifegui.exe). handles all command
line switches and stdin.

Simulation: management object for game of life simulation. contains methods to parse gol file, and run (runs simulation)
to desired generation.

GameBoard: object that stores the grid of cells in a vector. contains methods to initialize gameboard and advance a
generation.

Cell: object that stores a cell. contains methods to set alive and set dead as well as checking if a cell is alive or
dead. In addition, it is able to evaluate if it will be alive next gen and store that information for access from the
GameBoard object as well.

GridDimension: object that stores x and y ranges. contains getters and setters for these values.

View: base class inherited by all output classes (GOLOut, CmdView, GUIOut). contains information about the output such
as character used to represent alive and dead cells as well as their colors. contians the virtual method draw which
will be inherited by all subclasses.

GOLOut: subclass of view. draw method outputs gol file to stdout

CmdView: subclass of view. draw method outputs grid to stdout using representation character provided in the input gol
file.

GUIOut: subclass of view. draw method outputs grid to qt graphical user interface using the color provided in the input
gol file.

Assumptions:
(1) If window boundaries are outside of terrain boundaries, then the window will be invalid and will automatically
    inherit the terrain boundaries.
(2) gol file parser assumes that everything between () will be on the same line, and for coordinates provided in
    initialization object, the parser assumes that the ',' after the () will also be on the same line.

File Listing:

life.cc: source for life and lifegui program (uses ifdef to generate the two different executables)

Simulation.cc: source for simulation class
Simulation.hh: header file for simulation class

GameBoard.cc: source for gameboard class
GameBoard.hh: header file for gameboard class

Cell.cc: source for cell class
Cell.hh: header for cell class

GridDimension.cc: source for grid dimension class
GridDimension.hh: header for grid dimension class

View.cc: source for view class
View.hh: header for view class

GOLOut.cc: source for gol out class
GOLOut.hh: header for gol out class

CmdView.cc: source for command line view class
CmdView.hh: header for command line view class

GUIOut.cc: source for gui out.
GUIOut.hh: header for gui out.

Makefile: makefile generated by qmake. compiles project into life and lifegui executables.

gol_spaces_stripped.gol: file that holds a spaces stripped version of input gol file (must stay in directory for
    program to work).

help.gol: file referenced by the -h command line switch so users can view what a game of life file looks like.
